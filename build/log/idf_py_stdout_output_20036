[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/10] Linking C static library esp-idf\main\libmain.a
[3/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D A:\Eelectronics\TLC-SIM_v2\build\bootloader\esp-idf\esptool_py && C:\Users\alikhaledahmed\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/tlcadmin/esp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 A:/Eelectronics/TLC-SIM_v2/build/bootloader/bootloader.bin"
Bootloader binary size 0x6560 bytes. 0xaa0 bytes (9%) free.
[4/10] No install step for 'bootloader'
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable TLC-SIM_v2.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated A:/Eelectronics/TLC-SIM_v2/build/TLC-SIM_v2.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D A:\Eelectronics\TLC-SIM_v2\build\esp-idf\esptool_py && C:\Users\alikhaledahmed\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/tlcadmin/esp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app A:/Eelectronics/TLC-SIM_v2/build/partition_table/partition-table.bin A:/Eelectronics/TLC-SIM_v2/build/TLC-SIM_v2.bin"
TLC-SIM_v2.bin binary size 0x30b00 bytes. Smallest app partition is 0x100000 bytes. 0xcf500 bytes (81%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\tlcadmin\esp\v5.4\esp-idf\components\esptool_py && C:\Users\alikhaledahmed\.espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Users/tlcadmin/esp/v5.4/esp-idf -D SERIAL_TOOL=C:/Users/alikhaledahmed/.espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Users/tlcadmin/esp/v5.4/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=A:/Eelectronics/TLC-SIM_v2/build -P C:/Users/tlcadmin/esp/v5.4/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 TLC-SIM_v2.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM3
Connecting...........
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e8:6b:ea:d0:be:50
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25952 bytes to 16362...
Writing at 0x00001000... (100 %)
Wrote 25952 bytes (16362 compressed) at 0x00001000 in 0.6 seconds (effective 338.7 kbit/s)...
Hash of data verified.
Compressed 199424 bytes to 108134...
Writing at 0x00010000... (14 %)
Writing at 0x0001ce58... (28 %)
Writing at 0x00022a9e... (42 %)
Writing at 0x00028a5f... (57 %)
Writing at 0x0003024b... (71 %)
Writing at 0x00036e5c... (85 %)
Writing at 0x0003cee6... (100 %)
Wrote 199424 bytes (108134 compressed) at 0x00010000 in 2.6 seconds (effective 611.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 768.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
